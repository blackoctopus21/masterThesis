index: 1
# indicates whether to read configuration of stars and object from file
# number of stars, their positions and brightness wil be determined from the file
# stars will be drawn as streaks and their fwhm, length, alpha will be computed from the config
# object will be drawn as a point and his fwhm will be computed from the config
realData:
  enabled: False
  file: C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\realData\00040A_2_R_15-09-21_00..02..24

# number of generated series
numberOfSeries: 1

# number of frames in one series
# if realData is enabled number of frames depends on the object file and this value is not used
numberOfFramesInOneSeries: 1

# dimensions of the image
SizeX: 1024
SizeY: 1024

# destination where to save files
dataFile: C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\data\paper
#C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\data
#C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\newNNdata\train\line

# indicates whether to plot images
plot: False

# indicates whether to save FITS images
saveFITSImages: True

# indicates whether to save PNG images
savePNGImages: False


# indicates whether to save positions of stars, galaxies and objects to TSV file
savePositions: False

# indicates whether to save pixel data of stars, galaxies, objects, cosmic rays and hot pixels
# pixel data includes number of pixels, total intensity, maximum intensity
savePixelData: False

# indicates whether to use Poisson distribution on generated points, lines and galaxies
applyPoisson: True

# indicates whether to save all images of all series into one file
# mostly for the purposes of generating data for NN
# if true all FITS images will be saved in FITS file of dataFile, and TSV files in TSV file of dataFile
oneFileOnly: True

Stars:
  # indicates whether to use real data from the file
  # number of stars, their positions and brightness will be determined from the file
  # fwhm, length, alpha and drawing method will be computed using values in configuration
  realData:
    enabled: False
    file: C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\realData\00040A_2_R_15-09-21_00..02..24\00040A_2_R-0001_m_s.tsv

  count:
    min: 100
    max: 120
    random: uniform

  brightness:
    min: 1000
    max: 2000
    random: uniform

  fwhm:
    min: 3
    max: 3.5
    random: uniform*

  # method: line/gauss
  method: gauss

  # streak properties
  # applied only when method is line
  length:
    min: 5
    max: 8
    random: uniform*

  alpha:
    min: 0
    max: 360
    random: uniform*

Objects:
  enable: True

  count:
    min: 3
    max: 5
    random: uniform

  brightness:
    min: 1000
    max: 2000
    random: uniform

  fwhm:
    min: 3
    max: 4
    random: uniform

  # speed of object traveled % of the screen in one series
  # if frame is not a square, smallest dimension will be considered
  speed:
    min: 0
    max: 0
    random: uniform

  # determines the direction of the motion
  alpha:
    min: 0
    max: 180
    random: uniform

  # method: line/gauss
  method: line

  # streak properties
  # applied only when method is line
  length:
    min: 3
    max: 8
    random: uniform

Clusters:
  enable: False

  count:
    min: 1
    max: 1
    random: uniform

  objectCountPerCluster:
    min: 3
    max: 3
    random: uniform

  brightness:
    min: 1000
    max: 10000
    random: uniform

  fwhm:
    min: 3
    max: 10
    random: uniform

  # speed of objects traveled % of the screen in one series
  # if frame is not a square, smallest dimension will be considered
  speed:
    min: 30
    max: 80
    random: uniform

  # determines the direction of the motion
  alpha:
    min: 0
    max: 360
    random: uniform

  # method: line/gauss
  method: gauss

  # streak properties
  # applied only when method is line
  length:
    min: 10
    max: 50
    random: uniform

# galaxy is created as a sum of two Gaussian functions to imitate sharp peak (sharp Gauss) and diffuse edges (diffuse Gauss)
Galaxies:
  enable: True

  count:
    min: 2
    max: 4
    random: uniform

  # maximum brightness of sharp Gauss
  brightness:
    min: 3000
    max: 5000
    random: uniform

  # rotation angle
  alpha:
    min: 0
    max: 180
    random: uniform

  # sigma of the diffuseGauss on x axis
  sigmaX:
    min: 3.5
    max: 5.5
    random: uniform

  # sigma of the diffuseGauss on y axis
  sigmaY:
    min: 3.5
    max: 5.5
    random: uniform

  # defines the fraction of brightness from maximum brightness used to create the diffuseGauss
  # diffuseGauss.brightness  = brightnessFactor * sharpGauss.brightness
  brightnessFactor:
    min: 0.6
    max: 0.6
    random: uniform

  # defines the fraction of sigma from diffuseGauss to create the sharpGauss
  # sharpGauss.sigmaX = sigmaFactor * diffuseGauss.sigmaX
  # sharpGauss.sigmaY = sigmaFactor * diffuseGauss.sigmaY
  sigmaFactor:
    min: 0.3
    max: 0.3
    random: uniform

# noise of the sky background
# Gaussian noise
Noise:
  enable: True
  mean: 200
  std: 100

# dark frames cut out to specific size to fit generated image
# dark frame also contains bias frame !!!
DarkFrame:
  enable: True

  # data directory which contains cut images for defined size of image
  dataDir: C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\masterFrames\dark\size1024\90s

# flat frames cut out to specific size to fit generated image
FlatFrame:
  enable: True

  # data directory which contains cut images for defined size of image
  dataDir: C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\masterFrames\flat\size1024

# bias frames cut out to specific size to fit generated image
# avoid using bias frame when using dark, as dark also contains bias values
BiasFrame:
  enable: False

  # data directory which contains cut images for defined size of image
  dataDir: C:\Users\Admin\OneDrive\SKOLA\DIPLOMOVKA\masterThesis\stargen\masterFrames\bias\size50

HotPixel:
  enable: True

  count: 10

  brightness:
    min: 2000
    max: 10000
    random: uniform

  # if randomSeed is number, then this number will be used as 'random seed' to generate hot pixels
  # if its random then 'random seed' will be generated randomly for each series (this is for purposes of training NN)
  randomSeed: random

CosmicRays:
  enable: True

  count:
    min: 5
    max: 10
    random: uniform

  brightness:
    min: 2000
    max: 5000
    random: uniform

  # pixel count for worms and tracks
  pixelCount:
    min: 5
    max: 30
    random: uniform

  # pixel count for spots
  spotPixelCount:
    min: 2
    max: 10
    random: uniform
